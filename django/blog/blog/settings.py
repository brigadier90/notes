"""
Django settings for blog project.

Generated by 'django-admin startproject' using Django 1.11.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'hzzl(fv_ek#wb@s$7r8fwm64yffxyrg7hxp=f&j8njdy2^dr6&'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'blog',
    'articles',
    'accounts',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'blog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR + '/blog/templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'blog.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/' #this is the url entered in url bar to reach static files' directory, 
                        #where the directory name may be different
#ATTENTION: must add main app for static folder in main app to work

#STATIC_ROOT = os.path.join(BASE_DIR, 'static') #this is where all goes on collectstatic


STATICFILES_DIRS = (
    os.path.join(BASE_DIR + '/assets/'), 
)

MEDIA_URL = '/media/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media') #when user uploads something it will go here

# when puting static folders in each app, make sure to include a folder with app name or files will be
# overwritten on collectstatic


# STATIC_ROOT is the folder where every static files will be stored after a manage.py collectstatic
# The absolute path to the directory where collectstatic will collect static files for deployment.
# If the staticfiles contrib app is enabled (default) the collectstatic management command will collect 
# static files into this directory. See the howto on managing static files for more details about usage.

# STATICFILES_DIRS is the list of folder where Django will search for additional static files, 
# in addition to each static folder of each app installed.
# This setting defines the additional locations the staticfiles app will traverse if the 
# FileSystemFinder finder is enabled, e.g. if you use the collectstatic or findstatic management 
# command or use the static file serving view.

# STATIC_URL
# default: None
# URL to use when referring to static files located in STATIC_ROOT.
# Example: "/static/" or "http://static.example.com/"

#DOCUMENTATION: https://docs.djangoproject.com/en/2.0/ref/contrib/staticfiles/


# MEDIA_ROOT is the folder where every files uploaded with an FileField will go.
# Absolute filesystem path to the directory that will hold user-uploaded files.

# MEDIA_URL: URL that handles the media served from MEDIA_ROOT, used for managing stored files. 
# It must end in a slash if set to a non-empty value. You will need to configure these files to 
# be served in both development and production environments.

#DOC: https://docs.djangoproject.com/en/2.0/ref/settings/
